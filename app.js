// –ò–≥—Ä–æ–≤–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ
let gameState = {
  health: 50,
  mood: 50,
  hunger: 75,
  sanity: 50,
  incel_level: 30,
  god_complex: 0,
  fatigue: 0,
  money: 1000,
  vika_relationship: 0,
  days_survived: 0,
  hunger_zero_days: 0,
  low_mood_days: 0,
  days_since_rent: 0
};

// –î–∞–Ω–Ω—ã–µ –¥–µ–π—Å—Ç–≤–∏–π
const actions = {
  home: [
    {
      name: "–ü–æ–º—ã—Ç—å—Å—è",
      cost: 0,
      effects: { sanity: 10, incel_level: -10, fatigue: 5 },
      description: "–ü—Ä–∏–Ω—è—Ç—å –¥—É—à –∏ –ø—Ä–∏–≤–µ—Å—Ç–∏ —Å–µ–±—è –≤ –ø–æ—Ä—è–¥–æ–∫"
    },
    {
      name: "–ü–æ–±—Ä–∏—Ç—å—Å—è",
      cost: 0,
      effects: { sanity: 5, incel_level: -5, fatigue: 3 },
      description: "–ü–æ–±—Ä–∏—Ç—å—Å—è –∏ –≤—ã–≥–ª—è–¥–µ—Ç—å –ª—É—á—à–µ"
    },
    {
      name: "–ï–¥–∞ –æ—Ç —Ä–æ–¥–∏—Ç–µ–ª–µ–π",
      cost: 0,
      effects: { hunger: 40, mood: 5, fatigue: 2 },
      description: "–ü–æ–µ—Å—Ç—å –¥–æ–º–∞—à–Ω—é—é –µ–¥—É"
    },
    {
      name: "–ü—Ä–æ—Å–∏—Ç—å –µ–¥—É",
      cost: 0,
      effects: { hunger: 20, mood: -10, incel_level: 5 },
      description: "–£–Ω–∏–∑–∏—Ç–µ–ª—å–Ω–æ –ø–æ–ø—Ä–æ—Å–∏—Ç—å —É —Ä–æ–¥–∏—Ç–µ–ª–µ–π"
    },
    {
      name: "–û–ø–ª–∞—Ç–∏—Ç—å –ñ–ö–•",
      cost: 5000,
      effects: { money: -5000 },
      description: "–û–ø–ª–∞—Ç–∏—Ç—å –∫–æ–º–º—É–Ω–∞–ª—å–Ω—ã–µ —É—Å–ª—É–≥–∏ (5000‚ÇΩ)"
    }
  ],
  work: [
    {
      name: "–ê—Å—Ñ–∞–ª—å—Ç",
      money_range: [2200, 3800],
      effects: { health: -15, fatigue: 25, mood: -8, incel_level: 8, sanity: 3 },
      description: "–¢—è–∂–µ–ª–∞—è —Ä–∞–±–æ—Ç–∞ (2200-3800‚ÇΩ)",
      events: [
        { name: "–°–∫–∞–Ω–¥–∞–ª —Å –∫–æ–ª–ª–µ–≥–∞–º–∏", probability: 12, effects: { mood: -15, health: -5 } },
        { name: "–ù–∞—á–∞–ª—å–Ω–∏–∫ –ø–æ—Ö–≤–∞–ª–∏–ª", probability: 6, effects: { mood: 10, money: 500 } },
        { name: "–®—Ç—Ä–∞—Ñ –∑–∞ –±—Ä–∞–∫", probability: 8, effects: { money: -800, mood: -10 } }
      ]
    },
    {
      name: "–î–æ—Å—Ç–∞–≤–∫–∞",
      money_range: [800, 1500],
      effects: { health: -8, fatigue: 15, mood: -3, incel_level: 4, sanity: 6 },
      description: "–†–∞–±–æ—Ç–∞ –∫—É—Ä—å–µ—Ä–æ–º (800-1500‚ÇΩ)",
      events: [
        { name: "–ß–∞–µ–≤—ã–µ –∫–ª–∏–µ–Ω—Ç–∞", probability: 15, effects: { money: 300, mood: 5 } },
        { name: "–ü–æ–ø–∞–ª –ø–æ–¥ –¥–æ–∂–¥—å", probability: 6, effects: { health: -10, mood: -5 } },
        { name: "–ù–∞–≥–ª–∞—è —Å–æ–±–∞–∫–∞", probability: 7, effects: { health: -5, mood: -8 } }
      ]
    }
  ],
  outside: [
    {
      name: "–ì—É–ª—è—Ç—å",
      cost: 0,
      effects: { sanity: 8, incel_level: -8, fatigue: 10, mood: 5 },
      description: "–ü—Ä–æ–≥—É–ª—è—Ç—å—Å—è –Ω–∞ —Å–≤–µ–∂–µ–º –≤–æ–∑–¥—É—Ö–µ",
      events: [
        { name: "–í—Å—Ç—Ä–µ—Ç–∏–ª –≥–æ–ø–Ω–∏–∫–æ–≤", probability: 25, effects: { health: -20, money: -500, god_complex: -10, mood: -15 } }
      ]
    },
    {
      name: "–ó–≤–æ–Ω–∏—Ç—å –í–∏–∫–µ",
      cost: 0,
      description: "–ü–æ–∑–≤–æ–Ω–∏—Ç—å –í–∏–∫–µ (—à–∞–Ω—Å 30%)",
      special: "vika_call"
    },
    {
      name: "–í—Å—Ç—Ä–µ—á–∞ —Å –í–∏–∫–æ–π",
      cost: 10000,
      effects: { mood: 30, vika_relationship: 20, sanity: 15, money: -10000 },
      description: "–í—Å—Ç—Ä–µ—Ç–∏—Ç—å—Å—è —Å –í–∏–∫–æ–π (10000‚ÇΩ)",
      requirements: { vika_relationship: 50 }
    }
  ],
  entertainment: [
    {
      name: "–î—Ä–æ—á–∫–∞",
      cost: 0,
      effects: { health: 5, mood: 10, sanity: -5, incel_level: 10, fatigue: 8 },
      description: "–°–Ω—è—Ç—å –Ω–∞–ø—Ä—è–∂–µ–Ω–∏–µ"
    },
    {
      name: "–ú–∞–º–±–∞",
      cost: 8000,
      effects: { health: -5, mood: 15, money: -8000, incel_level: 5, fatigue: 5 },
      description: "–û–ø–ª–∞—Ç–∏—Ç—å –ú–∞–º–±—É (8000‚ÇΩ)"
    },
    {
      name: "–ü–æ—Å—Ç–∏–Ω–≥",
      cost: 0,
      effects: { mood: 8, sanity: -8, incel_level: 12, fatigue: 10 },
      description: "–ü–æ—Å—Ç–∏—Ç—å –≤ —Å–æ—Ü—Å–µ—Ç—è—Ö"
    },
    {
      name: "–§–æ—Ç–∫–∞ –ø–µ–Ω–∏—Å–∞",
      cost: 0,
      effects: { mood: 5, god_complex: 15, incel_level: 8, sanity: -10 },
      description: "–°–¥–µ–ª–∞—Ç—å –∏–Ω—Ç–∏–º–Ω–æ–µ —Ñ–æ—Ç–æ"
    }
  ],
  health: [
    {
      name: "–ë–æ–ª—å–Ω–∏—Ü–∞",
      cost: 2000,
      effects: { health: 30, sanity: 10, mood: -5, money: -2000, fatigue: 5 },
      description: "–û–±—Ä–∞—Ç–∏—Ç—å—Å—è –∫ –≤—Ä–∞—á—É (2000‚ÇΩ)"
    },
    {
      name: "–°–æ–Ω",
      cost: 0,
      effects: { fatigue: -50, health: 5 },
      description: "–í—ã—Å–ø–∞—Ç—å—Å—è –∏ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–∏—Ç—å —Å–∏–ª—ã"
    },
    {
      name: "–ü–æ–º–æ–π–∫–∞ (–µ–¥–∞)",
      cost: 0,
      effects: { hunger: 30, health: -10, sanity: -15, incel_level: 15, mood: -5 },
      description: "–ù–∞–π—Ç–∏ –µ–¥—É –≤ –º—É—Å–æ—Ä–Ω—ã—Ö –±–∞–∫–∞—Ö"
    }
  ]
};

const categoryTitles = {
  home: "üè† –î–æ–º",
  work: "üíº –†–∞–±–æ—Ç–∞",
  outside: "üåÜ –í—ã—Ö–æ–¥",
  entertainment: "üéÆ –†–∞–∑–≤–ª–µ—á–µ–Ω–∏—è",
  health: "üè• –ó–¥–æ—Ä–æ–≤—å–µ"
};

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ
function init() {
  updateUI();
  addEvent("–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ —Å–∏–º—É–ª—è—Ç–æ—Ä –∂–∏–∑–Ω–∏ MATVEY! –í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ.", "neutral");
}

// –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞
function updateUI() {
  // –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤
  document.getElementById('days').textContent = gameState.days_survived;
  document.getElementById('money').textContent = gameState.money;
  
  updateStat('health', gameState.health);
  updateStat('mood', gameState.mood);
  updateStat('hunger', gameState.hunger);
  updateStat('sanity', gameState.sanity);
  updateStat('incel', gameState.incel_level);
  updateStat('god', gameState.god_complex);
  updateStat('fatigue', gameState.fatigue);
  updateStat('vika', gameState.vika_relationship);
}

function updateStat(id, value) {
  const clampedValue = Math.max(0, Math.min(100, value));
  document.getElementById(id).textContent = clampedValue;
  document.getElementById(id + '-bar').style.width = clampedValue + '%';
}

// –î–æ–±–∞–≤–ª–µ–Ω–∏–µ —Å–æ–±—ã—Ç–∏—è –≤ –ª–æ–≥
function addEvent(message, type = 'neutral') {
  const eventsSection = document.getElementById('events');
  const eventDiv = document.createElement('div');
  eventDiv.className = `event-message ${type}`;
  eventDiv.textContent = message;
  eventsSection.insertBefore(eventDiv, eventsSection.firstChild);
  
  // –û–≥—Ä–∞–Ω–∏—á–∏–≤–∞–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–æ–±—ã—Ç–∏–π
  while (eventsSection.children.length > 5) {
    eventsSection.removeChild(eventsSection.lastChild);
  }
}

// –û—Ç–∫—Ä—ã—Ç–∏–µ –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
function openCategory(category) {
  const modal = document.getElementById('actionModal');
  const modalTitle = document.getElementById('modalTitle');
  const modalBody = document.getElementById('modalBody');
  
  modalTitle.textContent = categoryTitles[category];
  modalBody.innerHTML = '';
  
  const categoryActions = actions[category];
  categoryActions.forEach((action, index) => {
    const btn = document.createElement('button');
    btn.className = 'action-btn';
    
    const isBlocked = isActionBlocked(action);
    const canAfford = action.cost ? gameState.money >= action.cost : true;
    const meetsRequirements = checkRequirements(action);
    
    if (isBlocked || !canAfford || !meetsRequirements) {
      btn.disabled = true;
    }
    
    let details = action.description;
    if (isBlocked) {
      details += " [–ó–ê–ë–õ–û–ö–ò–†–û–í–ê–ù–û]";
    } else if (!canAfford) {
      details += " [–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –¥–µ–Ω–µ–≥]";
    } else if (!meetsRequirements) {
      details += " [–ù–µ –≤—ã–ø–æ–ª–Ω–µ–Ω—ã —É—Å–ª–æ–≤–∏—è]";
    }
    
    btn.innerHTML = `
      <div class="action-name">${action.name}</div>
      <div class="action-details">${details}</div>
    `;
    
    btn.onclick = () => performAction(category, index);
    modalBody.appendChild(btn);
  });
  
  modal.classList.add('active');
}

// –ü—Ä–æ–≤–µ—Ä–∫–∞ –±–ª–æ–∫–∏—Ä–æ–≤–∫–∏ –¥–µ–π—Å—Ç–≤–∏—è
function isActionBlocked(action) {
  // –ö–æ–º–ø–ª–µ–∫—Å –ë–æ–≥–∞ >50 –±–ª–æ–∫–∏—Ä—É–µ—Ç –≥–∏–≥–∏–µ–Ω—É –∏ –≤—ã—Ö–æ–¥
  if (gameState.god_complex > 50) {
    if (action.name === "–ü–æ–º—ã—Ç—å—Å—è" || action.name === "–ü–æ–±—Ä–∏—Ç—å—Å—è" || action.name === "–ì—É–ª—è—Ç—å") {
      return true;
    }
  }
  
  // –£—Å—Ç–∞–ª–æ—Å—Ç—å >80 –±–ª–æ–∫–∏—Ä—É–µ—Ç —Ä–∞–±–æ—Ç—É, –ø—Ä–æ–≥—É–ª–∫–∏, –ø–æ—Å—Ç–∏–Ω–≥
  if (gameState.fatigue > 80) {
    if (action.name === "–ê—Å—Ñ–∞–ª—å—Ç" || action.name === "–î–æ—Å—Ç–∞–≤–∫–∞" || action.name === "–ì—É–ª—è—Ç—å" || action.name === "–ü–æ—Å—Ç–∏–Ω–≥") {
      return true;
    }
  }
  
  return false;
}

// –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ç—Ä–µ–±–æ–≤–∞–Ω–∏–π
function checkRequirements(action) {
  if (!action.requirements) return true;
  
  for (let key in action.requirements) {
    if (gameState[key] < action.requirements[key]) {
      return false;
    }
  }
  return true;
}

// –í—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –¥–µ–π—Å—Ç–≤–∏—è
function performAction(category, actionIndex) {
  closeModal();
  
  const action = actions[category][actionIndex];
  let message = `–í—ã: ${action.name}.`;
  let messageType = 'neutral';
  
  // –°–ø–µ—Ü–∏–∞–ª—å–Ω—ã–µ –¥–µ–π—Å—Ç–≤–∏—è
  if (action.special === 'vika_call') {
    const success = Math.random() < 0.3;
    if (success) {
      applyEffects({ mood: 15, vika_relationship: 10, god_complex: 5 });
      message += " –í–∏–∫–∞ –æ—Ç–≤–µ—Ç–∏–ª–∞! –ü—Ä–∏—è—Ç–Ω—ã–π —Ä–∞–∑–≥–æ–≤–æ—Ä.";
      messageType = 'positive';
    } else {
      applyEffects({ mood: -20, vika_relationship: -15, god_complex: -5 });
      message += " –í–∏–∫–∞ –Ω–µ –≤–∑—è–ª–∞ —Ç—Ä—É–±–∫—É... –û–±–∏–¥–Ω–æ.";
      messageType = 'negative';
    }
  } else {
    // –ü—Ä–∏–º–µ–Ω–µ–Ω–∏–µ —ç—Ñ—Ñ–µ–∫—Ç–æ–≤
    if (action.effects) {
      applyEffects(action.effects);
    }
    
    // –†–∞–±–æ—Ç–∞ —Å –¥–∏–∞–ø–∞–∑–æ–Ω–æ–º –¥–µ–Ω–µ–≥
    if (action.money_range) {
      const earned = Math.floor(Math.random() * (action.money_range[1] - action.money_range[0] + 1)) + action.money_range[0];
      gameState.money += earned;
      message += ` –ó–∞—Ä–∞–±–æ—Ç–∞–Ω–æ: ${earned}‚ÇΩ.`;
      messageType = 'positive';
    }
    
    // –°–ª—É—á–∞–π–Ω—ã–µ —Å–æ–±—ã—Ç–∏—è
    if (action.events) {
      action.events.forEach(event => {
        if (Math.random() * 100 < event.probability) {
          message += ` ${event.name}!`;
          applyEffects(event.effects);
          messageType = event.effects.mood && event.effects.mood < 0 ? 'negative' : 'positive';
        }
      });
    }
  }
  
  // –ü–µ—Ä–µ—Ö–æ–¥ –Ω–∞ —Å–ª–µ–¥—É—é—â–∏–π –¥–µ–Ω—å
  nextDay();
  
  addEvent(message, messageType);
  showResult(message);
  updateUI();
  checkGameOver();
}

// –ü—Ä–∏–º–µ–Ω–µ–Ω–∏–µ —ç—Ñ—Ñ–µ–∫—Ç–æ–≤
function applyEffects(effects) {
  for (let key in effects) {
    if (gameState.hasOwnProperty(key)) {
      gameState[key] += effects[key];
      
      // –û–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è –¥–ª—è –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤ 0-100
      if (['health', 'mood', 'hunger', 'sanity', 'incel_level', 'god_complex', 'fatigue', 'vika_relationship'].includes(key)) {
        gameState[key] = Math.max(0, Math.min(100, gameState[key]));
      }
    }
  }
}

// –ü–µ—Ä–µ—Ö–æ–¥ –Ω–∞ —Å–ª–µ–¥—É—é—â–∏–π –¥–µ–Ω—å
function nextDay() {
  gameState.days_survived++;
  gameState.days_since_rent++;
  
  // –ï–∂–µ–¥–Ω–µ–≤–Ω—ã–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è
  gameState.hunger -= 25;
  gameState.hunger = Math.max(0, gameState.hunger);
  
  // –î–µ–ø—Ä–µ—Å—Å–∏—è –≤–ª–∏—è–µ—Ç –Ω–∞ –æ—Ç–Ω–æ—à–µ–Ω–∏—è —Å –í–∏–∫–æ–π
  if (gameState.mood < 20) {
    gameState.vika_relationship -= 10;
    gameState.vika_relationship = Math.max(0, gameState.vika_relationship);
    gameState.low_mood_days++;
  } else {
    gameState.low_mood_days = 0;
  }
  
  // –°—á–µ—Ç—á–∏–∫ –¥–Ω–µ–π —Å –Ω—É–ª–µ–≤–æ–π —Å—ã—Ç–æ—Å—Ç—å—é
  if (gameState.hunger === 0) {
    gameState.hunger_zero_days++;
  } else {
    gameState.hunger_zero_days = 0;
  }
  
  // –ñ–ö–• –∫–∞–∂–¥—ã–µ 7 –¥–Ω–µ–π
  if (gameState.days_since_rent >= 7) {
    gameState.money -= 5000;
    gameState.days_since_rent = 0;
    addEvent("–°–ø–∏—Å–∞–Ω–æ 5000‚ÇΩ –∑–∞ –ñ–ö–•", "negative");
  }
}

// –ü—Ä–æ–≤–µ—Ä–∫–∞ —É—Å–ª–æ–≤–∏–π –æ–∫–æ–Ω—á–∞–Ω–∏—è –∏–≥—Ä—ã
function checkGameOver() {
  let gameOverMessage = '';
  let isGameOver = false;
  
  // –°–º–µ—Ä—Ç—å –æ—Ç –∑–¥–æ—Ä–æ–≤—å—è
  if (gameState.health <= 0) {
    gameOverMessage = '–í—ã —É–º–µ—Ä–ª–∏ –æ—Ç –±–æ–ª–µ–∑–Ω–µ–π –∏ —Ç—Ä–∞–≤–º...';
    isGameOver = true;
  }
  // –°–º–µ—Ä—Ç—å –æ—Ç –≥–æ–ª–æ–¥–∞
  else if (gameState.hunger_zero_days >= 3) {
    gameOverMessage = '–í—ã —É–º–µ—Ä–ª–∏ –æ—Ç –≥–æ–ª–æ–¥–∞...';
    isGameOver = true;
  }
  // –°—É–∏—Ü–∏–¥
  else if (gameState.low_mood_days >= 3) {
    gameOverMessage = '–í—ã —Å–≤–µ–ª–∏ —Å—á–µ—Ç—ã —Å –∂–∏–∑–Ω—å—é –∏–∑-–∑–∞ –¥–µ–ø—Ä–µ—Å—Å–∏–∏...';
    isGameOver = true;
  }
  // –ö–æ–º–ø–ª–µ–∫—Å –ë–æ–≥–∞
  else if (gameState.god_complex >= 100) {
    gameOverMessage = '–í–∞—à –∫–æ–º–ø–ª–µ–∫—Å –ë–æ–≥–∞ –¥–æ—Å—Ç–∏–≥ –∫—Ä–∏—Ç–∏—á–µ—Å–∫–æ–π —Ç–æ—á–∫–∏. –í—ã –ø–æ—Ç–µ—Ä—è–ª–∏ —Å–≤—è–∑—å —Å —Ä–µ–∞–ª—å–Ω–æ—Å—Ç—å—é...';
    isGameOver = true;
  }
  // –ü–æ–±–µ–¥–∞
  else if (gameState.vika_relationship >= 100) {
    gameOverMessage = `–ü–æ–∑–¥—Ä–∞–≤–ª—è–µ–º! –í–∏–∫–∞ —Å–æ–≥–ª–∞—Å–∏–ª–∞—Å—å –±—ã—Ç—å —Å –≤–∞–º–∏! –í—ã –ø—Ä–æ–∂–∏–ª–∏ ${gameState.days_survived} –¥–Ω–µ–π.`;
    isGameOver = true;
  }
  
  if (isGameOver) {
    showGameOver(gameOverMessage);
  }
}

// –ü–æ–∫–∞–∑–∞—Ç—å —Ä–µ–∑—É–ª—å—Ç–∞—Ç –¥–µ–π—Å—Ç–≤–∏—è
function showResult(message) {
  const modal = document.getElementById('resultModal');
  const resultBody = document.getElementById('resultBody');
  resultBody.textContent = message;
  modal.classList.add('active');
}

function closeResultModal() {
  document.getElementById('resultModal').classList.remove('active');
}

// –ü–æ–∫–∞–∑–∞—Ç—å Game Over
function showGameOver(message) {
  const modal = document.getElementById('gameOverModal');
  const gameOverBody = document.getElementById('gameOverBody');
  gameOverBody.innerHTML = `
    <p>${message}</p>
    <p><strong>–î–Ω–µ–π –ø—Ä–æ–∂–∏—Ç–æ: ${gameState.days_survived}</strong></p>
    <p><strong>–ó–∞—Ä–∞–±–æ—Ç–∞–Ω–æ –¥–µ–Ω–µ–≥: ${gameState.money}‚ÇΩ</strong></p>
  `;
  modal.classList.add('active');
}

// –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫ –∏–≥—Ä—ã
function restartGame() {
  gameState = {
    health: 50,
    mood: 50,
    hunger: 75,
    sanity: 50,
    incel_level: 30,
    god_complex: 0,
    fatigue: 0,
    money: 1000,
    vika_relationship: 0,
    days_survived: 0,
    hunger_zero_days: 0,
    low_mood_days: 0,
    days_since_rent: 0
  };
  
  document.getElementById('gameOverModal').classList.remove('active');
  document.getElementById('events').innerHTML = '<div class="event-message neutral">–ù–æ–≤–∞—è –∏–≥—Ä–∞ –Ω–∞—á–∞–ª–∞—Å—å! –£–¥–∞—á–∏!</div>';
  updateUI();
}

// –ó–∞–∫—Ä—ã—Ç–∏–µ –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞
function closeModal() {
  document.getElementById('actionModal').classList.remove('active');
}

// –ó–∞–ø—É—Å–∫ –∏–≥—Ä—ã –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ
window.addEventListener('DOMContentLoaded', init);